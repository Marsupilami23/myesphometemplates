substitutions:
  api_key: ""
  device_location: "home"
  device_location_code: "changeme"
  device_location_name: "Change Me"
  device_type_code: "snsr"
  device_type_name: "Sensor"

  disable_entities: "true"
  wifi_ap_timeout: 2min


  sub_on_turn_on: script_do_nothing
  sub_on_turn_off: script_do_nothing

  # Add GPIO Pins Here
  sub_binary_sensor_gpio: GPIO08
  sub_activity_led_gpio: GPIO26
  sub_batt_dv_gpio: GPIO14
  sub_batt_lvl_gpio: GPIO23
  sub_reset_button_gpio: GPIO22

  sub_reboot_req: '9'
  sub_ota_num_attempts: '15'

  sub_max_power: '0.8'
  sub_api_reboot_timeout: 0s

bk72xx:
  board: generic-bk7231n-qfn32-tuya
  family: bk7231n

esphome:
  name: "${name}"
  project:
    name: "${project_name}"
    version: "${project_ver_num}(${project_ver_let})"
  on_boot:
    - priority: 600.0
      then:
        - component.update: VCC
        - switch.turn_on: batt_dv
    - priority: 100.0
      then:
        - output.turn_on: activity_led_output
    - priority: -100
      then:
        - component.update: VCC
        - component.update: homeassistant_time
        - component.update: update_time
        - script.execute: script_deep_sleep

external_components:
  - source:
      type: git
      url: https://github.com/szupi-ipuzs/esphome-external-components
      ref: main
    components: [ deep_sleep_libretiny ]
    
packages:
  standard_packages:
    url: https://github.com/Marsupilami23/myesphometemplates/
    ref: main
    refresh: always
    files:
      - xfox-door-sensor/standard/api.yaml
      - xfox-door-sensor/standard/captive_portal.yaml
      - xfox-door-sensor/standard/esphome.yaml
      - xfox-door-sensor/standard/logger.yaml
      - xfox-door-sensor/standard/mdns.yaml
      - xfox-door-sensor/standard/ota.yaml
      - xfox-door-sensor/standard/safe_mode.yaml
      - xfox-door-sensor/standard/web_server.yaml
      - xfox-door-sensor/standard/wifi.yaml
      - xfox-door-sensor/scripts
      
button:
  - platform: restart
    id: restart_button
    name: $friendly_name Restart Firmware
    entity_category: diagnostic
    disabled_by_default: $disable_entities

text_sensor:
  - platform: libretiny
    version:
      name: LibreTiny Version

  - platform: wifi_info
    ip_address:
      name: $friendly_name IP Address
      entity_category: diagnostic
      disabled_by_default: "${disable_entities}"

  - platform: template
    id: update_time
    name: "Current Time"
    lambda: |-
      char str[17];
      time_t currTime = id(homeassistant_time).now().timestamp;
      strftime(str, sizeof(str), "%Y-%m-%d %H:%M", localtime(&currTime));
      return { str };
    icon: "mdi:clock"

output:
  - platform: libretiny_pwm
    id: activity_led_output
    frequency: 1000 Hz
    pin:
      number: "${sub_activity_led_gpio}"

binary_sensor:
  - platform: gpio
    device_class: door
    name: $friendly_name
    pin:
      number: "${sub_binary_sensor_gpio}"
      allow_other_uses: true
    on_state:
      - if:
          condition:
            - switch.is_off: manual_mode
          then:
            - output.turn_on: activity_led_output
            - delay: 1000ms
            - output.turn_off: activity_led_output
          else:
            - light.turn_on:
                id: activity_led
                effect: pulse
      - script.execute: script_deep_sleep
    icon: mdi:door

  - platform: gpio
    id: bottom_button
    pin:
      number: "${sub_reset_button_gpio}"
      inverted: true
      allow_other_uses: true
    name: "Reset Button"
    icon: mdi:button-pointer
    on_state:
      - script.execute: script_check_deep_sleep
    on_multi_click:
      - timing:
          - on for at least 1s
        then:
          - switch.toggle: manual_mode

switch:
  - platform: gpio
    id: batt_dv
    pin: $sub_batt_dv_gpio

  - platform: template
    optimistic: True
    name: Manual mode
    id: manual_mode
    on_turn_off:
      - script.execute: script_check_deep_sleep
    on_turn_on:
      - script.execute: script_check_deep_sleep
      - light.turn_on:
          id: activity_led
          effect: pulse
    entity_category: config
    icon: mdi:sleep-off

sensor:
  - platform: adc
    pin: $sub_batt_lvl_gpio
    id: "VCC"
    name: "Battery Level"
    filters:
      - multiply: 2.4
      - clamp:
          min_value: 0.0
          max_value: 3.0
          ignore_out_of_range: true
    on_value:
      then:
        - component.update: battery_level
    icon: mdi:battery

  - platform: template
    name: "Battery Level (%)"
    unit_of_measurement: '%'
    update_interval: 86400s
    id: battery_level
    lambda: |-
      return ((id(VCC).state /3.0) * 100.00);
    icon: mdi:battery

  - platform: template
    name: first_connect_ms
    id: first_connect_ms
    lambda: |-
      return id(first_connect_ms_int);

  - platform: internal_temperature
    name: Internal Temperature
    icon: mdi:thermometer

light:
  - platform: monochromatic
    name: "Activity LED"
    output: activity_led_output
    id: activity_led
    icon: mdi:lamp
    effects:
      - strobe:
      - pulse:
          transition_length:
            on_length: 1s
            off_length: 2s
          update_interval: 3s

time:
  - platform: homeassistant
    id: homeassistant_time
    on_time_sync:
      then:
        - component.update: update_time

deep_sleep_libretiny:
  id: deep_sleep_control
  sleep_duration: 24h
  run_duration: 10s
  wakeup_pins:
    - pin:
        number: "${sub_reset_button_gpio}"
        allow_other_uses: true
        mode:
          input: True
          pullup: True
        inverted: True
      wakeup_pin_mode: KEEP_AWAKE
    - pin:
        number: "${sub_binary_sensor_gpio}"
        allow_other_uses: true
        mode:
          input: True
      wakeup_pin_mode: INVERT_WAKEUP
