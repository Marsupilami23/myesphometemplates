substitutions:
  log_level: DEBUG
  sub_baud_rate: "115200"
  sub_verify_ssl: false
  
globals:
  - id: burn_category
    type: int
    restore_value: true
    initial_value: "0"
    
# Enable logging via network and disable serial port
logger:
  level: "${log_level}"
  baud_rate: "${sub_baud_rate}"

http_request:
  id: burn_check_request
  verify_ssl: "false"

time:
  - platform: homeassistant
    id: homeassistant_time

binary_sensor:
  # Diagnostic sensor for connection
  - platform: status
    name: "API Status"
    id: sensor_status
    disabled_by_default: true

text_sensor:
  - platform: template
    id: burn_status
    name: "Burn Status"
    icon: mdi:fire
    lambda: |-
      auto burn_cat = id(burn_category);
      std::string burn_status_text = "Unknown";
      
      if (burn_cat == 6) {
        burn_status_text = "Burning Allowed";
      } else if (burn_cat == 7 || burn_cat == 8) {
        burn_status_text = "Burning Discouraged or Burning Prohibited with exceptions";
      } else if (burn_cat == 9) {
        burn_status_text = "Burning Prohibited, no exceptions!";
      }
      id(burn_status).publish_state(burn_status_text);
      return {};
    
sensor:
  - platform: template
    id: burn_status_sensor
    name: "Burn Status Category"
    icon: "mdi:fire"
    lambda: |-
      auto burn_cat = id(burn_category);
      id(burn_status_sensor).publish_state(burn_cat);
      return {};
          
# Provide a pre-built button for restart the device
button:
  - platform: restart
    name: "Reboot Device"
    id: button_restart
    icon: mdi:power-cycle
    entity_category: "diagnostic"
