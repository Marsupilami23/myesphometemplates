substitutions:
  # WIFI Substitutions
  wifi_ssid: !secret wifi_ssid
  wifi_password: !secret wifi_password
  ota_password: !secret ota_password
  sub_ota_num_attempts: "15"

sensor:
  - platform: wifi_signal
    name: "RSSI"
    id: sensor_rssi
    update_interval: 60s
    entity_category: "diagnostic"

api:

# Enable OTA
ota:
  - platform: esphome
    id: my_ota
    password: "${ota_password}"
    on_error:
      then:
        - button.press: button_restart
  
# Enable WIFI and AP for capitve portal
wifi:
  id: wifi_brg95758
  fast_connect: false
  power_save_mode: none

  ssid: "${wifi_ssid}"
  password: "${wifi_password}"
  ap:
    ssid: "${sub_name}-setup"
    password: "${wifi_password}"
  on_connect:
    then:
        - lambda: |-
            // Include necessary headers
            #include "HTTPClient.h"
            #include "ESPAsyncWebServer.h"
            
            HTTPClient http;
            http.begin("https://sonomatech-production.s3.amazonaws.com/sacramento/airquality_org/cbyb-widget/burncheckForecast.txt")
  
            int httpCode = http.GET();
            if (httpCode > 0) {
              if (httpCode == HTTP_CODE_OK) {
                String payload = http.getString();
                // Remove "burncheckForecastCallback(" and ")" from the response
                std::string cleaned_body = payload;
                cleaned_body = cleaned_body.erase(0, strlen("burncheckForecastCallback("));
                cleaned_body = cleaned_body.erase(cleaned_body.size() - 1);

                // Use ArduinoJson to parse the JSON response
                DynamicJsonDocument doc(200); // Adjust size as needed
                DeserializationError error = deserializeJson(doc, cleaned_body);

                if (!error) {
                  int burn_category = doc["burn_forecast"]["today"]["category"].as<int>();
                } else {
                  ESP_LOGD("burn_category", "[HTTP] GET... failed, error: %s", htttp.errorToString(httpCode).c_str());
                }
                http.end();

web_server:
  version: 3
  include_internal: true
  ota: true

captive_portal:
