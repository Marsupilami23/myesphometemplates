substitutions:
  # WIFI Substitutions
  wifi_ssid: !secret wifi_ssid
  wifi_password: !secret wifi_password
  ota_password: !secret ota_password
  sub_wifi_ap_timeout: 2min
  sub_reboot_req: '9'
  sub_ota_num_attempts: '15'
  sub_api_reboot_timeout: 0s

api:

mqtt:
  broker: !secret hassio_mqtt_broker
  port: 1883
  username: !secret xfox_mqtt_username
  password: !secret xfox_mqtt_password
  discovery: true
  birth_message:
    topic: 
    payload:
  will_message:
    topic:
    payload:
  on_connect:
    - mqtt.publish:
        topic: device/status
        payload: "connection successfull"
  
# Enable OTA
ota:
  - platform: esphome
    id: my_ota
    password: "${ota_password}"
    on_error:
      then:
        - button.press: restart_button
    on_begin:
      then:
        - output.turn_on: activity_led_output
        - mqtt.publish:
            topic: begining/update
            payload: "Begining Firmware Update!"
        - deep_sleep_libretiny.prevent: deep_sleep_lt
    on_end:
      then:
        - mqtt.publish:
            topic: finished/update
            payload: "Updating Firmware Has Been Completed!"
          
safe_mode:
  num_attempts: "${sub_ota_num_attempts}"
  
# Enable WIFI and AP for capitve portal
wifi:
  fast_connect: true
  ssid: "${wifi_ssid}"
  password: "${wifi_password}"
  manual_ip:
    static_ip: "${sub_static_ip}"
    gateway: !secret sub_gateway
    subnet: !secret sub_subnet
  ap:
    ap_timeout: "${sub_wifi_ap_timeout}"
    ssid: "${device_code}-setup"
    password: "${wifi_password}"
  on_connect:
    - lambda: |-
        if (id(first_connect_ms_int) == 0) id(first_connect_ms_int) = esphome::millis();
    - component.update: first_connect_ms

time:
  - platform: homeassistant
    id: homeassistant_time
    on_time_sync:
      then:
        - component.update: update_time
        
captive_portal:
