sensor:
  - platform: adc
    pin: $sub_batt_lvl_gpio
    id: "VCC"
    name: "Battery Voltage"
    filters:
      - multiply: 2.4
      - clamp:
          min_value: 0.0
          max_value: 3.0
          ignore_out_of_range: true
    on_value:
      then:
        - component.update: battery_level
        - logger.log:
            format: "Received VCC: %s"
            args: ['id(VCC).state']
    entity_category: diagnostic
    icon: mdi:battery

  - platform: template
    name: "Battery Level (%)"
    unit_of_measurement: '%'
    update_interval: 300s
    id: battery_level
    lambda: |-
      return ((id(VCC).state /3.0) * 100.00);
    entity_category: diagnostic
    icon: mdi:battery

  - platform: template
    name: first_connect_ms
    id: first_connect_ms
    entity_category: diagnostic
    lambda: |-
      return id(first_connect_ms_int);

  - platform: internal_temperature
    name: "Internal Temperature"
    icon: mdi:thermometer

  - platform: template
    name: "Current Time"
    id: current_time
    update_interval: never
    device_class: timestamp
    icon: "mdi:calendar-clock"
    entity_category: diagnostic
    lambda: |-
      char current_time_str[32];
      time_t currTime = id(homeassistant_time).now().timestamp;
      strftime(current_time_str, sizeof(current_time_str), "%Y-%m-%d %H:%M", localtime(&currTime));
      return { current_time_str };
    
