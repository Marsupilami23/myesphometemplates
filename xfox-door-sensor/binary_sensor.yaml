binary_sensor:
  - platform: gpio
    device_class: door
    id: door
    name: "${device_type_name}"
    pin:
      number: "${sub_binary_sensor_gpio}"
      allow_other_uses: true
    on_state:
      - if:
          condition:
            - switch.is_off: manual_mode
          then:
            - component.update: homeassistant_time
            - sensor.template.publish:
                id: current_time
                state: !lambda |-
                    char current_time_str[17];
                    time_t currTime = id(homeassistant_time).now().timestamp;
                    strftime(current_time_str, sizeof(current_time_str), "%Y-%m-%d %H:%M", localtime(&currTime));
                    return std::string(current_time_str);
            - output.turn_on: activity_led_output
            - delay: 5000ms
            - output.turn_off: activity_led_output
          else:
            - light.turn_on:
                id: activity_led
                effect: pulse
      - script.execute: script_deep_sleep
    icon: mdi:door

  - platform: gpio
    id: bottom_button
    pin:
      number: "${sub_reset_button_gpio}"
      inverted: true
      allow_other_uses: true
    name: "Bottom Button"
    entity_category: diagnostic
    icon: mdi:button-pointer
    on_state:
      - script.execute: script_check_deep_sleep
    on_click:
      min_length: 50ms
      max_length: 350ms
      then:
        - switch.toggle: manual_mode
