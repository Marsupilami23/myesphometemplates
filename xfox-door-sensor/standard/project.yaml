substitutions:
  # Generated name and unique device id for the device
  # Not intended for user substitutions
  device_name: "${device_room_name} ${device_location_name}"
  device_model: "Door Sensor"
  device_make: "XFOX"
  package_version: "2024.11.20"

# https://esphome.io/components/esphome.html
esphome:
  name: "${device_code}"
  friendly_name: "${device_name}"
  comment: "${device_model} by ${device_make}"
  name_add_mac_suffix: false
  min_version: "2024.11.0"
  project:
    name: "${device_make}.${device_model}"
    version: "${package_version}"
  on_boot:
    # https://esphome.io/components/esphome.html#on-boot
    - priority: 600.0 # 600.0: This is where most sensors are set up.
      then:
        - component.update: VCC
        - switch.turn_on: batt_dv # start measuring voltage
    - priority: 100.0
      then:
        - output.turn_on: activity_led_output
    - priority: -99
      then:
        - globals.set:
            id: device_code
            value: !lambda |
              // Construct the full device code string
              std::string code = id(device_room_code).state + "-" + id(device_location_code).state+ "-" + id(device_type_code).state;
              char* cstring = new char[code.length() + 1];
              strcpy(cstring, code.c_str());
              return cstring;
    - priority: -100 # 200.0: Network connections like MQTT/native API are set up at this priority.
      then:
        - component.update: VCC
        - component.update: homeassistant_time
        - component.update: update_time
        - script.execute: script_deep_sleep

globals:
  - id: first_connect_ms_int
    type: uint32_t
    initial_value: "0"
  - id: device_code
    type: const char*
    initial_value: ""
